diff --git a/app/src/main/java/org/simple/clinic/search/PatientSearchScreen.kt b/app/src/main/java/org/simple/clinic/search/PatientSearchScreen.kt
index d4394ad50..0410b9c9c 100644
--- a/app/src/main/java/org/simple/clinic/search/PatientSearchScreen.kt
+++ b/app/src/main/java/org/simple/clinic/search/PatientSearchScreen.kt
@@ -1,21 +1,12 @@
 package org.simple.clinic.search
 
 import android.content.Context
-import android.support.annotation.StringRes
 import android.support.design.widget.TextInputLayout
-import android.support.transition.ChangeBounds
-import android.support.transition.Fade
-import android.support.transition.TransitionManager
-import android.support.transition.TransitionSet
-import android.support.v4.view.animation.FastOutSlowInInterpolator
 import android.util.AttributeSet
-import android.view.View
-import android.view.ViewGroup
 import android.view.inputmethod.EditorInfo
 import android.widget.EditText
 import android.widget.ImageButton
 import android.widget.RelativeLayout
-import android.widget.TextView
 import com.jakewharton.rxbinding2.view.RxView
 import com.jakewharton.rxbinding2.widget.RxTextView
 import io.reactivex.Observable
@@ -24,7 +15,6 @@ import io.reactivex.schedulers.Schedulers.io
 import kotterknife.bindView
 import org.simple.clinic.R
 import org.simple.clinic.activity.TheActivity
-import org.simple.clinic.widgets.ageanddateofbirth.DateOfBirthAndAgeVisibility
 import org.simple.clinic.newentry.PatientEntryScreen
 import org.simple.clinic.router.screen.ScreenRouter
 import org.simple.clinic.search.results.PatientSearchResultsScreen
@@ -50,14 +40,6 @@ class PatientSearchScreen(context: Context, attrs: AttributeSet) : RelativeLayou
   private val backButton by bindView<ImageButton>(R.id.patientsearch_back)
   private val fullNameEditText by bindView<EditText>(R.id.patientsearch_fullname)
   private val fullNameInputLayout by bindView<TextInputLayout>(R.id.patientsearch_fullname_inputlayout)
-  private val ageEditText by bindView<EditText>(R.id.patientsearch_age)
-  private val ageInputLayout by bindView<TextInputLayout>(R.id.patientsearch_age_inputlayout)
-  private val ageEditTextContainer by bindView<ViewGroup>(R.id.patientsearch_age_container)
-  private val dateOfBirthEditText by bindView<EditText>(R.id.patientsearch_dateofbirth)
-  private val dateOfBirthInputLayout by bindView<TextInputLayout>(R.id.patientsearch_dateofbirth_inputlayout)
-  private val dateOfBirthEditTextContainer by bindView<ViewGroup>(R.id.patientsearch_dateofbirth_container)
-  private val dateOfBirthAndAgeSeparator by bindView<View>(R.id.patientsearch_dateofbirth_and_age_separator)
-  private val ageOrDateOfBirthErrorTextView by bindView<TextView>(R.id.patientsearch_age_or_dateofbirth_error)
   private val searchButtonFrame by bindView<PrimarySolidButtonWithFrame>(R.id.patientsearch_search_frame)
 
   override fun onFinishInflate() {
@@ -73,7 +55,7 @@ class PatientSearchScreen(context: Context, attrs: AttributeSet) : RelativeLayou
     }
 
     Observable
-        .mergeArray(nameChanges(), dateOfBirthChanges(), ageChanges(), searchClicks())
+        .mergeArray(nameChanges(), searchClicks())
         .observeOn(io())
         .compose(controller)
         .observeOn(mainThread())
@@ -87,21 +69,9 @@ class PatientSearchScreen(context: Context, attrs: AttributeSet) : RelativeLayou
           .map(CharSequence::toString)
           .map(::SearchQueryNameChanged)
 
-  private fun dateOfBirthChanges() =
-      RxTextView
-          .textChanges(dateOfBirthEditText)
-          .map(CharSequence::toString)
-          .map(::SearchQueryDateOfBirthChanged)
-
-  private fun ageChanges() = RxTextView
-      .textChanges(ageEditText)
-      .map(CharSequence::toString)
-      .map(::SearchQueryAgeChanged)
-
   private fun searchClicks(): Observable<SearchClicked> {
     val imeSearchClicks = RxTextView
-        .editorActionEvents(dateOfBirthEditText)
-        .mergeWith(RxTextView.editorActionEvents(ageEditText))
+        .editorActionEvents(fullNameEditText)
         .filter { it.actionId() == EditorInfo.IME_ACTION_SEARCH }
 
     return RxView
@@ -122,33 +92,8 @@ class PatientSearchScreen(context: Context, attrs: AttributeSet) : RelativeLayou
     screenRouter.push(PatientEntryScreen.KEY)
   }
 
-  fun openPatientSearchResultsScreen(name: String, age: String, dateOfBirth: String) {
-    screenRouter.push(PatientSearchResultsScreen.KEY(name, age, dateOfBirth))
-  }
-
-  fun setDateOfBirthAndAgeVisibility(visibility: DateOfBirthAndAgeVisibility) {
-    val transition = TransitionSet()
-        .addTransition(ChangeBounds())
-        .addTransition(Fade())
-        .setOrdering(TransitionSet.ORDERING_TOGETHER)
-        .setDuration(250)
-        .setInterpolator(FastOutSlowInInterpolator())
-    TransitionManager.beginDelayedTransition(this, transition)
-
-    dateOfBirthEditTextContainer.visibility = when (visibility) {
-      DateOfBirthAndAgeVisibility.DATE_OF_BIRTH_VISIBLE, DateOfBirthAndAgeVisibility.BOTH_VISIBLE -> View.VISIBLE
-      else -> View.GONE
-    }
-
-    dateOfBirthAndAgeSeparator.visibility = when (visibility) {
-      DateOfBirthAndAgeVisibility.BOTH_VISIBLE -> View.VISIBLE
-      else -> View.GONE
-    }
-
-    ageEditTextContainer.visibility = when (visibility) {
-      DateOfBirthAndAgeVisibility.AGE_VISIBLE, DateOfBirthAndAgeVisibility.BOTH_VISIBLE -> View.VISIBLE
-      else -> View.GONE
-    }
+  fun openPatientSearchResultsScreen(name: String) {
+    screenRouter.push(PatientSearchResultsScreen.KEY(name))
   }
 
   fun setEmptyFullNameErrorVisible(visible: Boolean) {
@@ -159,27 +104,4 @@ class PatientSearchScreen(context: Context, attrs: AttributeSet) : RelativeLayou
     }
     fullNameInputLayout.isErrorEnabled = visible
   }
-
-  fun setEmptyDateOfBirthAndAgeErrorVisible(visible: Boolean) {
-    setAgeOrDateOfBirthErrorVisible(visible, R.string.patientsearch_error_both_dateofbirth_and_age_empty)
-    ageInputLayout.error = if (visible) " " else null
-  }
-
-  fun setInvalidDateOfBirthErrorVisible(visible: Boolean) {
-    setAgeOrDateOfBirthErrorVisible(visible, R.string.patientsearch_error_invalid_dateofbirth)
-    dateOfBirthInputLayout.error = if (visible) " " else null
-  }
-
-  fun setDateOfBirthIsInFutureErrorVisible(visible: Boolean) {
-    setAgeOrDateOfBirthErrorVisible(visible, R.string.patientsearch_error_dateofbirth_is_in_future)
-    dateOfBirthInputLayout.error = if (visible) " " else null
-  }
-
-  private fun setAgeOrDateOfBirthErrorVisible(visible: Boolean, @StringRes errorTextRes: Int) {
-    ageOrDateOfBirthErrorTextView.visibility = if (visible) View.VISIBLE else View.GONE
-    ageOrDateOfBirthErrorTextView.apply {
-      visibility = if (visible) View.VISIBLE else View.GONE
-      text = if (visible) resources.getString(errorTextRes) else null
-    }
-  }
 }

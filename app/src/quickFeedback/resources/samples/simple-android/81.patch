diff --git a/app/src/main/java/org/simple/clinic/search/PatientSearchScreen.kt b/app/src/main/java/org/simple/clinic/search/PatientSearchScreen.kt
index fc256e2da..da8048e4d 100644
--- a/app/src/main/java/org/simple/clinic/search/PatientSearchScreen.kt
+++ b/app/src/main/java/org/simple/clinic/search/PatientSearchScreen.kt
@@ -19,7 +19,6 @@ import org.simple.clinic.ReportAnalyticsEvents
 import org.simple.clinic.allpatientsinfacility.AllPatientsInFacilityListScrolled
 import org.simple.clinic.allpatientsinfacility.AllPatientsInFacilitySearchResultClicked
 import org.simple.clinic.allpatientsinfacility.AllPatientsInFacilityView
-import org.simple.clinic.bindUiToController
 import org.simple.clinic.di.injector
 import org.simple.clinic.mobius.MobiusDelegate
 import org.simple.clinic.patient.PatientSearchCriteria
@@ -40,7 +39,7 @@ import javax.inject.Inject
 class PatientSearchScreen(
     context: Context,
     attrs: AttributeSet
-) : RelativeLayout(context, attrs), PatientSearchUi {
+) : RelativeLayout(context, attrs), PatientSearchUi, PatientSearchUiActions {
 
   @Inject
   lateinit var screenRouter: ScreenRouter
@@ -48,9 +47,6 @@ class PatientSearchScreen(
   @Inject
   lateinit var activity: AppCompatActivity
 
-  @Inject
-  lateinit var controllerFactory: PatientSearchScreenController.InjectionFactory
-
   @Inject
   lateinit var utcClock: UtcClock
 
@@ -73,7 +69,6 @@ class PatientSearchScreen(
             patientClickEvents()
         )
         .compose(ReportAnalyticsEvents())
-        .share()
   }
 
   private val delegate by unsafeLazy {
@@ -81,7 +76,7 @@ class PatientSearchScreen(
 
     MobiusDelegate.forView(
         events = events.ofType(),
-        defaultModel = PatientSearchModel.create(),
+        defaultModel = PatientSearchModel.create(screenKey.additionalIdentifier),
         update = PatientSearchUpdate(),
         effectHandler = effectHandlerFactory.create(this).build(),
         init = PatientSearchInit(),
@@ -103,13 +98,6 @@ class PatientSearchScreen(
 
     val screenDestroys = detaches().map { ScreenDestroyed() }
     hideKeyboardWhenAllPatientsListIsScrolled(screenDestroys)
-
-    bindUiToController(
-        ui = this,
-        events = events,
-        controller = controllerFactory.create(screenKey.additionalIdentifier),
-        screenDestroys = screenDestroys
-    )
   }
 
   override fun onAttachedToWindow() {
